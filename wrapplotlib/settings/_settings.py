
from sejings import Sejings as Settings, extract_sejings as extract_settings
from matplotlib import rcParams

__all__ = ['settings', 'extract_settings']

settings = Settings()


settings._internal = Settings()
settings.agg = Settings()
settings.agg.path = Settings()
settings.animation = Settings()
settings.axes = Settings()
settings.axes.formatter = Settings()
settings.axes.grid = Settings()
settings.axes.spines = Settings()
settings.axes3d = Settings()
settings.backend = Settings()
settings.boxplot = Settings()
settings.boxplot.boxprops = Settings()
settings.boxplot.capprops = Settings()
settings.boxplot.flierprops = Settings()
settings.boxplot.meanprops = Settings()
settings.boxplot.medianprops = Settings()
settings.boxplot.whiskerprops = Settings()
settings.contour = Settings()
settings.date = Settings()
settings.date.autoformatter = Settings()
settings.docstring = Settings()
settings.errorbar = Settings()
settings.examples = Settings()
settings.figure = Settings()
settings.figure.constrained_layout = Settings()
settings.figure.subplot = Settings()
settings.font = Settings()
settings.grid = Settings()
settings.hatch = Settings()
settings.hist = Settings()
settings.image = Settings()
settings.keymap = Settings()
settings.legend = Settings()
settings.lines = Settings()
settings.markers = Settings()
settings.mathtext = Settings()
settings.patch = Settings()
settings.path = Settings()
settings.pdf = Settings()
settings.pgf = Settings()
settings.polaraxes = Settings()
settings.ps = Settings()
settings.ps.distiller = Settings()
settings.savefig = Settings()
settings.scatter = Settings()
settings.svg = Settings()
settings.text = Settings()
settings.text.latex = Settings()
settings.tk = Settings()
settings.verbose = Settings()
settings.webagg = Settings()
settings.xtick = Settings()
settings.xtick.major = Settings()
settings.xtick.minor = Settings()
settings.ytick = Settings()
settings.ytick.major = Settings()
settings.ytick.minor = Settings()

settings._internal.classic_mode = rcParams["_internal.classic_mode"]
settings.agg.path.chunksize = rcParams["agg.path.chunksize"]
settings.animation.avconv_args = rcParams["animation.avconv_args"]
settings.animation.avconv_path = rcParams["animation.avconv_path"]
settings.animation.bitrate = rcParams["animation.bitrate"]
settings.animation.codec = rcParams["animation.codec"]
settings.animation.convert_args = rcParams["animation.convert_args"]
settings.animation.convert_path = rcParams["animation.convert_path"]
settings.animation.embed_limit = rcParams["animation.embed_limit"]
settings.animation.ffmpeg_args = rcParams["animation.ffmpeg_args"]
settings.animation.ffmpeg_path = rcParams["animation.ffmpeg_path"]
settings.animation.frame_format = rcParams["animation.frame_format"]
settings.animation.html = rcParams["animation.html"]
settings.animation.html_args = rcParams["animation.html_args"]
settings.animation.writer = rcParams["animation.writer"]
settings.axes.autolimit_mode = rcParams["axes.autolimit_mode"]
settings.axes.axisbelow = rcParams["axes.axisbelow"]
settings.axes.edgecolor = rcParams["axes.edgecolor"]
settings.axes.facecolor = rcParams["axes.facecolor"]
settings.axes.formatter.limits = rcParams["axes.formatter.limits"]
settings.axes.formatter.min_exponent = rcParams["axes.formatter.min_exponent"]
settings.axes.formatter.offset_threshold = rcParams["axes.formatter.offset_threshold"]
settings.axes.formatter.use_locale = rcParams["axes.formatter.use_locale"]
settings.axes.formatter.use_mathtext = rcParams["axes.formatter.use_mathtext"]
settings.axes.formatter.useoffset = rcParams["axes.formatter.useoffset"]
settings.axes.grid = rcParams["axes.grid"]
settings.axes.grid.axis = rcParams["axes.grid.axis"]
settings.axes.grid.which = rcParams["axes.grid.which"]
settings.axes.labelcolor = rcParams["axes.labelcolor"]
settings.axes.labelpad = rcParams["axes.labelpad"]
settings.axes.labelsize = rcParams["axes.labelsize"]
settings.axes.labelweight = rcParams["axes.labelweight"]
settings.axes.linewidth = rcParams["axes.linewidth"]
settings.axes.prop_cycle = rcParams["axes.prop_cycle"]
settings.axes.spines.bottom = rcParams["axes.spines.bottom"]
settings.axes.spines.left = rcParams["axes.spines.left"]
settings.axes.spines.right = rcParams["axes.spines.right"]
settings.axes.spines.top = rcParams["axes.spines.top"]
settings.axes.titlepad = rcParams["axes.titlepad"]
settings.axes.titlesize = rcParams["axes.titlesize"]
settings.axes.titleweight = rcParams["axes.titleweight"]
settings.axes.unicode_minus = rcParams["axes.unicode_minus"]
settings.axes.xmargin = rcParams["axes.xmargin"]
settings.axes.ymargin = rcParams["axes.ymargin"]
settings.axes3d.grid = rcParams["axes3d.grid"]
settings.backend = rcParams["backend"]
settings.backend.qt4 = rcParams["backend.qt4"]
settings.backend.qt5 = rcParams["backend.qt5"]
settings.backend_fallback = rcParams["backend_fallback"]
settings.boxplot.bootstrap = rcParams["boxplot.bootstrap"]
settings.boxplot.boxprops.color = rcParams["boxplot.boxprops.color"]
settings.boxplot.boxprops.linestyle = rcParams["boxplot.boxprops.linestyle"]
settings.boxplot.boxprops.linewidth = rcParams["boxplot.boxprops.linewidth"]
settings.boxplot.capprops.color = rcParams["boxplot.capprops.color"]
settings.boxplot.capprops.linestyle = rcParams["boxplot.capprops.linestyle"]
settings.boxplot.capprops.linewidth = rcParams["boxplot.capprops.linewidth"]
settings.boxplot.flierprops.color = rcParams["boxplot.flierprops.color"]
settings.boxplot.flierprops.linestyle = rcParams["boxplot.flierprops.linestyle"]
settings.boxplot.flierprops.linewidth = rcParams["boxplot.flierprops.linewidth"]
settings.boxplot.flierprops.marker = rcParams["boxplot.flierprops.marker"]
settings.boxplot.flierprops.markeredgecolor = rcParams["boxplot.flierprops.markeredgecolor"]
settings.boxplot.flierprops.markerfacecolor = rcParams["boxplot.flierprops.markerfacecolor"]
settings.boxplot.flierprops.markersize = rcParams["boxplot.flierprops.markersize"]
settings.boxplot.meanline = rcParams["boxplot.meanline"]
settings.boxplot.meanprops.color = rcParams["boxplot.meanprops.color"]
settings.boxplot.meanprops.linestyle = rcParams["boxplot.meanprops.linestyle"]
settings.boxplot.meanprops.linewidth = rcParams["boxplot.meanprops.linewidth"]
settings.boxplot.meanprops.marker = rcParams["boxplot.meanprops.marker"]
settings.boxplot.meanprops.markeredgecolor = rcParams["boxplot.meanprops.markeredgecolor"]
settings.boxplot.meanprops.markerfacecolor = rcParams["boxplot.meanprops.markerfacecolor"]
settings.boxplot.meanprops.markersize = rcParams["boxplot.meanprops.markersize"]
settings.boxplot.medianprops.color = rcParams["boxplot.medianprops.color"]
settings.boxplot.medianprops.linestyle = rcParams["boxplot.medianprops.linestyle"]
settings.boxplot.medianprops.linewidth = rcParams["boxplot.medianprops.linewidth"]
settings.boxplot.notch = rcParams["boxplot.notch"]
settings.boxplot.patchartist = rcParams["boxplot.patchartist"]
settings.boxplot.showbox = rcParams["boxplot.showbox"]
settings.boxplot.showcaps = rcParams["boxplot.showcaps"]
settings.boxplot.showfliers = rcParams["boxplot.showfliers"]
settings.boxplot.showmeans = rcParams["boxplot.showmeans"]
settings.boxplot.vertical = rcParams["boxplot.vertical"]
settings.boxplot.whiskerprops.color = rcParams["boxplot.whiskerprops.color"]
settings.boxplot.whiskerprops.linestyle = rcParams["boxplot.whiskerprops.linestyle"]
settings.boxplot.whiskerprops.linewidth = rcParams["boxplot.whiskerprops.linewidth"]
settings.boxplot.whiskers = rcParams["boxplot.whiskers"]
settings.contour.corner_mask = rcParams["contour.corner_mask"]
settings.contour.negative_linestyle = rcParams["contour.negative_linestyle"]
settings.datapath = rcParams["datapath"]
settings.date.autoformatter.day = rcParams["date.autoformatter.day"]
settings.date.autoformatter.hour = rcParams["date.autoformatter.hour"]
settings.date.autoformatter.microsecond = rcParams["date.autoformatter.microsecond"]
settings.date.autoformatter.minute = rcParams["date.autoformatter.minute"]
settings.date.autoformatter.month = rcParams["date.autoformatter.month"]
settings.date.autoformatter.second = rcParams["date.autoformatter.second"]
settings.date.autoformatter.year = rcParams["date.autoformatter.year"]
settings.docstring.hardcopy = rcParams["docstring.hardcopy"]
settings.errorbar.capsize = rcParams["errorbar.capsize"]
settings.examples.directory = rcParams["examples.directory"]
settings.figure.autolayout = rcParams["figure.autolayout"]
settings.figure.constrained_layout.h_pad = rcParams["figure.constrained_layout.h_pad"]
settings.figure.constrained_layout.hspace = rcParams["figure.constrained_layout.hspace"]
settings.figure.constrained_layout.use = rcParams["figure.constrained_layout.use"]
settings.figure.constrained_layout.w_pad = rcParams["figure.constrained_layout.w_pad"]
settings.figure.constrained_layout.wspace = rcParams["figure.constrained_layout.wspace"]
settings.figure.dpi = rcParams["figure.dpi"]
settings.figure.edgecolor = rcParams["figure.edgecolor"]
settings.figure.facecolor = rcParams["figure.facecolor"]
settings.figure.figsize = rcParams["figure.figsize"]
settings.figure.frameon = rcParams["figure.frameon"]
settings.figure.max_open_warning = rcParams["figure.max_open_warning"]
settings.figure.subplot.bottom = rcParams["figure.subplot.bottom"]
settings.figure.subplot.hspace = rcParams["figure.subplot.hspace"]
settings.figure.subplot.left = rcParams["figure.subplot.left"]
settings.figure.subplot.right = rcParams["figure.subplot.right"]
settings.figure.subplot.top = rcParams["figure.subplot.top"]
settings.figure.subplot.wspace = rcParams["figure.subplot.wspace"]
settings.figure.titlesize = rcParams["figure.titlesize"]
settings.figure.titleweight = rcParams["figure.titleweight"]
settings.font.cursive = rcParams["font.cursive"]
settings.font.family = rcParams["font.family"]
settings.font.fantasy = rcParams["font.fantasy"]
settings.font.monospace = rcParams["font.monospace"]
settings.font.sans_serif = rcParams["font.sans_serif"]
settings.font.serif = rcParams["font.serif"]
settings.font.size = rcParams["font.size"]
settings.font.stretch = rcParams["font.stretch"]
settings.font.style = rcParams["font.style"]
settings.font.variant = rcParams["font.variant"]
settings.font.weight = rcParams["font.weight"]
settings.grid.alpha = rcParams["grid.alpha"]
settings.grid.color = rcParams["grid.color"]
settings.grid.linestyle = rcParams["grid.linestyle"]
settings.grid.linewidth = rcParams["grid.linewidth"]
settings.hatch.color = rcParams["hatch.color"]
settings.hatch.linewidth = rcParams["hatch.linewidth"]
settings.hist.bins = rcParams["hist.bins"]
settings.image.aspect = rcParams["image.aspect"]
settings.image.cmap = rcParams["image.cmap"]
settings.image.composite_image = rcParams["image.composite_image"]
settings.image.interpolation = rcParams["image.interpolation"]
settings.image.lut = rcParams["image.lut"]
settings.image.origin = rcParams["image.origin"]
settings.image.resample = rcParams["image.resample"]
settings.interactive = rcParams["interactive"]
settings.keymap.all_axes = rcParams["keymap.all_axes"]
settings.keymap.back = rcParams["keymap.back"]
settings.keymap.copy = rcParams["keymap.copy"]
settings.keymap.forward = rcParams["keymap.forward"]
settings.keymap.fullscreen = rcParams["keymap.fullscreen"]
settings.keymap.grid = rcParams["keymap.grid"]
settings.keymap.grid_minor = rcParams["keymap.grid_minor"]
settings.keymap.help = rcParams["keymap.help"]
settings.keymap.home = rcParams["keymap.home"]
settings.keymap.pan = rcParams["keymap.pan"]
settings.keymap.quit = rcParams["keymap.quit"]
settings.keymap.quit_all = rcParams["keymap.quit_all"]
settings.keymap.save = rcParams["keymap.save"]
settings.keymap.xscale = rcParams["keymap.xscale"]
settings.keymap.yscale = rcParams["keymap.yscale"]
settings.keymap.zoom = rcParams["keymap.zoom"]
settings.legend.borderaxespad = rcParams["legend.borderaxespad"]
settings.legend.borderpad = rcParams["legend.borderpad"]
settings.legend.columnspacing = rcParams["legend.columnspacing"]
settings.legend.edgecolor = rcParams["legend.edgecolor"]
settings.legend.facecolor = rcParams["legend.facecolor"]
settings.legend.fancybox = rcParams["legend.fancybox"]
settings.legend.fontsize = rcParams["legend.fontsize"]
settings.legend.framealpha = rcParams["legend.framealpha"]
settings.legend.frameon = rcParams["legend.frameon"]
settings.legend.handleheight = rcParams["legend.handleheight"]
settings.legend.handlelength = rcParams["legend.handlelength"]
settings.legend.handletextpad = rcParams["legend.handletextpad"]
settings.legend.labelspacing = rcParams["legend.labelspacing"]
settings.legend.loc = rcParams["legend.loc"]
settings.legend.markerscale = rcParams["legend.markerscale"]
settings.legend.numpoints = rcParams["legend.numpoints"]
settings.legend.scatterpoints = rcParams["legend.scatterpoints"]
settings.legend.shadow = rcParams["legend.shadow"]
settings.legend.title_fontsize = rcParams["legend.title_fontsize"]
settings.lines.antialiased = rcParams["lines.antialiased"]
settings.lines.color = rcParams["lines.color"]
settings.lines.dash_capstyle = rcParams["lines.dash_capstyle"]
settings.lines.dash_joinstyle = rcParams["lines.dash_joinstyle"]
settings.lines.dashdot_pattern = rcParams["lines.dashdot_pattern"]
settings.lines.dashed_pattern = rcParams["lines.dashed_pattern"]
settings.lines.dotted_pattern = rcParams["lines.dotted_pattern"]
settings.lines.linestyle = rcParams["lines.linestyle"]
settings.lines.linewidth = rcParams["lines.linewidth"]
settings.lines.marker = rcParams["lines.marker"]
settings.lines.markeredgecolor = rcParams["lines.markeredgecolor"]
settings.lines.markeredgewidth = rcParams["lines.markeredgewidth"]
settings.lines.markerfacecolor = rcParams["lines.markerfacecolor"]
settings.lines.markersize = rcParams["lines.markersize"]
settings.lines.scale_dashes = rcParams["lines.scale_dashes"]
settings.lines.solid_capstyle = rcParams["lines.solid_capstyle"]
settings.lines.solid_joinstyle = rcParams["lines.solid_joinstyle"]
settings.markers.fillstyle = rcParams["markers.fillstyle"]
settings.mathtext.bf = rcParams["mathtext.bf"]
settings.mathtext.cal = rcParams["mathtext.cal"]
settings.mathtext.default = rcParams["mathtext.default"]
settings.mathtext.fallback_to_cm = rcParams["mathtext.fallback_to_cm"]
settings.mathtext.fontset = rcParams["mathtext.fontset"]
settings.mathtext.it = rcParams["mathtext.it"]
settings.mathtext.rm = rcParams["mathtext.rm"]
settings.mathtext.sf = rcParams["mathtext.sf"]
settings.mathtext.tt = rcParams["mathtext.tt"]
settings.patch.antialiased = rcParams["patch.antialiased"]
settings.patch.edgecolor = rcParams["patch.edgecolor"]
settings.patch.facecolor = rcParams["patch.facecolor"]
settings.patch.force_edgecolor = rcParams["patch.force_edgecolor"]
settings.patch.linewidth = rcParams["patch.linewidth"]
settings.path.effects = rcParams["path.effects"]
settings.path.simplify = rcParams["path.simplify"]
settings.path.simplify_threshold = rcParams["path.simplify_threshold"]
settings.path.sketch = rcParams["path.sketch"]
settings.path.snap = rcParams["path.snap"]
settings.pdf.compression = rcParams["pdf.compression"]
settings.pdf.fonttype = rcParams["pdf.fonttype"]
settings.pdf.inheritcolor = rcParams["pdf.inheritcolor"]
settings.pdf.use14corefonts = rcParams["pdf.use14corefonts"]
settings.pgf.preamble = rcParams["pgf.preamble"]
settings.pgf.rcfonts = rcParams["pgf.rcfonts"]
settings.pgf.texsystem = rcParams["pgf.texsystem"]
settings.polaraxes.grid = rcParams["polaraxes.grid"]
settings.ps.distiller.res = rcParams["ps.distiller.res"]
settings.ps.fonttype = rcParams["ps.fonttype"]
settings.ps.papersize = rcParams["ps.papersize"]
settings.ps.useafm = rcParams["ps.useafm"]
settings.ps.usedistiller = rcParams["ps.usedistiller"]
settings.savefig.bbox = rcParams["savefig.bbox"]
settings.savefig.directory = rcParams["savefig.directory"]
settings.savefig.dpi = rcParams["savefig.dpi"]
settings.savefig.edgecolor = rcParams["savefig.edgecolor"]
settings.savefig.facecolor = rcParams["savefig.facecolor"]
settings.savefig.format = rcParams["savefig.format"]
settings.savefig.frameon = rcParams["savefig.frameon"]
settings.savefig.jpeg_quality = rcParams["savefig.jpeg_quality"]
settings.savefig.orientation = rcParams["savefig.orientation"]
settings.savefig.pad_inches = rcParams["savefig.pad_inches"]
settings.savefig.transparent = rcParams["savefig.transparent"]
settings.scatter.marker = rcParams["scatter.marker"]
settings.svg.fonttype = rcParams["svg.fonttype"]
settings.svg.hashsalt = rcParams["svg.hashsalt"]
settings.svg.image_inline = rcParams["svg.image_inline"]
settings.text.antialiased = rcParams["text.antialiased"]
settings.text.color = rcParams["text.color"]
settings.text.hinting = rcParams["text.hinting"]
settings.text.hinting_factor = rcParams["text.hinting_factor"]
settings.text.latex.preamble = rcParams["text.latex.preamble"]
settings.text.latex.preview = rcParams["text.latex.preview"]
settings.text.latex.unicode = rcParams["text.latex.unicode"]
settings.text.usetex = rcParams["text.usetex"]
settings.timezone = rcParams["timezone"]
settings.tk.window_focus = rcParams["tk.window_focus"]
settings.toolbar = rcParams["toolbar"]
settings.verbose.fileo = rcParams["verbose.fileo"]
settings.verbose.level = rcParams["verbose.level"]
settings.webagg.address = rcParams["webagg.address"]
settings.webagg.open_in_browser = rcParams["webagg.open_in_browser"]
settings.webagg.port = rcParams["webagg.port"]
settings.webagg.port_retries = rcParams["webagg.port_retries"]
settings.xtick.alignment = rcParams["xtick.alignment"]
settings.xtick.bottom = rcParams["xtick.bottom"]
settings.xtick.color = rcParams["xtick.color"]
settings.xtick.direction = rcParams["xtick.direction"]
settings.xtick.labelbottom = rcParams["xtick.labelbottom"]
settings.xtick.labelsize = rcParams["xtick.labelsize"]
settings.xtick.labeltop = rcParams["xtick.labeltop"]
settings.xtick.major.bottom = rcParams["xtick.major.bottom"]
settings.xtick.major.pad = rcParams["xtick.major.pad"]
settings.xtick.major.size = rcParams["xtick.major.size"]
settings.xtick.major.top = rcParams["xtick.major.top"]
settings.xtick.major.width = rcParams["xtick.major.width"]
settings.xtick.minor.bottom = rcParams["xtick.minor.bottom"]
settings.xtick.minor.pad = rcParams["xtick.minor.pad"]
settings.xtick.minor.size = rcParams["xtick.minor.size"]
settings.xtick.minor.top = rcParams["xtick.minor.top"]
settings.xtick.minor.visible = rcParams["xtick.minor.visible"]
settings.xtick.minor.width = rcParams["xtick.minor.width"]
settings.xtick.top = rcParams["xtick.top"]
settings.ytick.alignment = rcParams["ytick.alignment"]
settings.ytick.color = rcParams["ytick.color"]
settings.ytick.direction = rcParams["ytick.direction"]
settings.ytick.labelleft = rcParams["ytick.labelleft"]
settings.ytick.labelright = rcParams["ytick.labelright"]
settings.ytick.labelsize = rcParams["ytick.labelsize"]
settings.ytick.left = rcParams["ytick.left"]
settings.ytick.major.left = rcParams["ytick.major.left"]
settings.ytick.major.pad = rcParams["ytick.major.pad"]
settings.ytick.major.right = rcParams["ytick.major.right"]
settings.ytick.major.size = rcParams["ytick.major.size"]
settings.ytick.major.width = rcParams["ytick.major.width"]
settings.ytick.minor.left = rcParams["ytick.minor.left"]
settings.ytick.minor.pad = rcParams["ytick.minor.pad"]
settings.ytick.minor.right = rcParams["ytick.minor.right"]
settings.ytick.minor.size = rcParams["ytick.minor.size"]
settings.ytick.minor.visible = rcParams["ytick.minor.visible"]
settings.ytick.minor.width = rcParams["ytick.minor.width"]
settings.ytick.right = rcParams["ytick.right"]